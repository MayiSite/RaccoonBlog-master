// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
#pragma warning disable 1591, 3008, 3009, 0108
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace RaccoonBlog.Web.Controllers
{
    public partial class PostsController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public PostsController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected PostsController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Tag()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Tag);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Series()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Series);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Archive()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Archive);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public PostsController Actions { get { return MVC.Posts; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Posts";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Posts";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string Tag = "Tag";
            public readonly string Series = "Series";
            public readonly string Archive = "Archive";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string Tag = "Tag";
            public const string Series = "Series";
            public const string Archive = "Archive";
        }


        static readonly ActionParamsClass_Tag s_params_Tag = new ActionParamsClass_Tag();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Tag TagParams { get { return s_params_Tag; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Tag
        {
            public readonly string slug = "slug";
        }
        static readonly ActionParamsClass_Series s_params_Series = new ActionParamsClass_Series();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Series SeriesParams { get { return s_params_Series; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Series
        {
            public readonly string seriesId = "seriesId";
            public readonly string seriesSlug = "seriesSlug";
        }
        static readonly ActionParamsClass_Archive s_params_Archive = new ActionParamsClass_Archive();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Archive ArchiveParams { get { return s_params_Archive; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Archive
        {
            public readonly string year = "year";
            public readonly string month = "month";
            public readonly string day = "day";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string List = "List";
            }
            public readonly string List = "~/Views/Posts/List.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_PostsController : RaccoonBlog.Web.Controllers.PostsController
    {
        public T4MVC_PostsController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void TagOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string slug);

        [NonAction]
        public override System.Web.Mvc.ActionResult Tag(string slug)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Tag);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "slug", slug);
            TagOverride(callInfo, slug);
            return callInfo;
        }

        [NonAction]
        partial void SeriesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int seriesId, string seriesSlug);

        [NonAction]
        public override System.Web.Mvc.ActionResult Series(int seriesId, string seriesSlug)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Series);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "seriesId", seriesId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "seriesSlug", seriesSlug);
            SeriesOverride(callInfo, seriesId, seriesSlug);
            return callInfo;
        }

        [NonAction]
        partial void ArchiveOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int year, int? month, int? day);

        [NonAction]
        public override System.Web.Mvc.ActionResult Archive(int year, int? month, int? day)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Archive);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "year", year);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "month", month);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "day", day);
            ArchiveOverride(callInfo, year, month, day);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108
