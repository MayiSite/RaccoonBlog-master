// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
#pragma warning disable 1591, 3008, 3009, 0108
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static partial class MVC
{
    static readonly AdminClass s_Admin = new AdminClass();
    public static AdminClass Admin { get { return s_Admin; } }
    public static RaccoonBlog.Web.Controllers.CssController Css = new RaccoonBlog.Web.Controllers.T4MVC_CssController();
    public static RaccoonBlog.Web.Controllers.ErrorController Error = new RaccoonBlog.Web.Controllers.T4MVC_ErrorController();
    public static RaccoonBlog.Web.Controllers.LegacyPostController LegacyPost = new RaccoonBlog.Web.Controllers.T4MVC_LegacyPostController();
    public static RaccoonBlog.Web.Controllers.PostDetailsController PostDetails = new RaccoonBlog.Web.Controllers.T4MVC_PostDetailsController();
    public static RaccoonBlog.Web.Controllers.PostsController Posts = new RaccoonBlog.Web.Controllers.T4MVC_PostsController();
    public static RaccoonBlog.Web.Controllers.SearchController Search = new RaccoonBlog.Web.Controllers.T4MVC_SearchController();
    public static RaccoonBlog.Web.Controllers.SectionController Section = new RaccoonBlog.Web.Controllers.T4MVC_SectionController();
    public static RaccoonBlog.Web.Controllers.SeriesController Series = new RaccoonBlog.Web.Controllers.T4MVC_SeriesController();
    public static RaccoonBlog.Web.Controllers.SocialController Social = new RaccoonBlog.Web.Controllers.T4MVC_SocialController();
    public static RaccoonBlog.Web.Controllers.SyndicationController Syndication = new RaccoonBlog.Web.Controllers.T4MVC_SyndicationController();
    public static RaccoonBlog.Web.Controllers.WelcomeController Welcome = new RaccoonBlog.Web.Controllers.T4MVC_WelcomeController();
    public static T4MVC.MailTemplatesController MailTemplates = new T4MVC.MailTemplatesController();
    public static T4MVC.SharedController Shared = new T4MVC.SharedController();
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class AdminClass
    {
        public readonly string Name = "Admin";
        public RaccoonBlog.Web.Areas.Admin.Controllers.LoginController Login = new RaccoonBlog.Web.Areas.Admin.Controllers.T4MVC_LoginController();
        public RaccoonBlog.Web.Areas.Admin.Controllers.PostsController Posts = new RaccoonBlog.Web.Areas.Admin.Controllers.T4MVC_PostsController();
        public RaccoonBlog.Web.Areas.Admin.Controllers.SectionsController Sections = new RaccoonBlog.Web.Areas.Admin.Controllers.T4MVC_SectionsController();
        public RaccoonBlog.Web.Areas.Admin.Controllers.SettingsController Settings = new RaccoonBlog.Web.Areas.Admin.Controllers.T4MVC_SettingsController();
        public RaccoonBlog.Web.Areas.Admin.Controllers.UsersController Users = new RaccoonBlog.Web.Areas.Admin.Controllers.T4MVC_UsersController();
        public T4MVC.Admin.SharedController Shared = new T4MVC.Admin.SharedController();
    }
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy
    {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ActionResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Scripts {
        private const string URLPATH = "~/Scripts";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Content {
        private const string URLPATH = "~/Content";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class css {
            private const string URLPATH = "~/Content/css";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string anytime_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/anytime.min.css") ? Url("anytime.min.css") : Url("anytime.css");
                 
            public static readonly string anytime_min_css = Url("anytime.min.css");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class bootstrap {
                private const string URLPATH = "~/Content/css/bootstrap";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string alerts_less = Url("alerts.less");
                public static readonly string badges_less = Url("badges.less");
                public static readonly string bootstrap_custom_less = Url("bootstrap.custom.less");
                public static readonly string bootstrap_less = Url("bootstrap.less");
                public static readonly string bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.css") ? Url("bootstrap.min.css") : Url("bootstrap.css");
                     
                public static readonly string bootstrap_css_map = Url("bootstrap.css.map");
                public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
                public static readonly string breadcrumbs_less = Url("breadcrumbs.less");
                public static readonly string button_groups_less = Url("button-groups.less");
                public static readonly string buttons_less = Url("buttons.less");
                public static readonly string carousel_less = Url("carousel.less");
                public static readonly string close_less = Url("close.less");
                public static readonly string code_less = Url("code.less");
                public static readonly string component_animations_less = Url("component-animations.less");
                public static readonly string dropdowns_less = Url("dropdowns.less");
                public static readonly string forms_less = Url("forms.less");
                public static readonly string glyphicons_less = Url("glyphicons.less");
                public static readonly string grid_less = Url("grid.less");
                public static readonly string input_groups_less = Url("input-groups.less");
                public static readonly string jumbotron_less = Url("jumbotron.less");
                public static readonly string labels_less = Url("labels.less");
                public static readonly string list_group_less = Url("list-group.less");
                public static readonly string media_less = Url("media.less");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class mixins {
                    private const string URLPATH = "~/Content/css/bootstrap/mixins";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string alerts_less = Url("alerts.less");
                    public static readonly string background_variant_less = Url("background-variant.less");
                    public static readonly string border_radius_less = Url("border-radius.less");
                    public static readonly string buttons_less = Url("buttons.less");
                    public static readonly string center_block_less = Url("center-block.less");
                    public static readonly string clearfix_less = Url("clearfix.less");
                    public static readonly string forms_less = Url("forms.less");
                    public static readonly string gradients_less = Url("gradients.less");
                    public static readonly string grid_framework_less = Url("grid-framework.less");
                    public static readonly string grid_less = Url("grid.less");
                    public static readonly string hide_text_less = Url("hide-text.less");
                    public static readonly string image_less = Url("image.less");
                    public static readonly string labels_less = Url("labels.less");
                    public static readonly string list_group_less = Url("list-group.less");
                    public static readonly string nav_divider_less = Url("nav-divider.less");
                    public static readonly string nav_vertical_align_less = Url("nav-vertical-align.less");
                    public static readonly string opacity_less = Url("opacity.less");
                    public static readonly string pagination_less = Url("pagination.less");
                    public static readonly string panels_less = Url("panels.less");
                    public static readonly string progress_bar_less = Url("progress-bar.less");
                    public static readonly string reset_filter_less = Url("reset-filter.less");
                    public static readonly string resize_less = Url("resize.less");
                    public static readonly string responsive_visibility_less = Url("responsive-visibility.less");
                    public static readonly string size_less = Url("size.less");
                    public static readonly string tab_focus_less = Url("tab-focus.less");
                    public static readonly string table_row_less = Url("table-row.less");
                    public static readonly string text_emphasis_less = Url("text-emphasis.less");
                    public static readonly string text_overflow_less = Url("text-overflow.less");
                    public static readonly string vendor_prefixes_less = Url("vendor-prefixes.less");
                }
            
                public static readonly string mixins_less = Url("mixins.less");
                public static readonly string modals_less = Url("modals.less");
                public static readonly string navbar_less = Url("navbar.less");
                public static readonly string navs_less = Url("navs.less");
                public static readonly string normalize_less = Url("normalize.less");
                public static readonly string pager_less = Url("pager.less");
                public static readonly string pagination_less = Url("pagination.less");
                public static readonly string panels_less = Url("panels.less");
                public static readonly string popovers_less = Url("popovers.less");
                public static readonly string print_less = Url("print.less");
                public static readonly string progress_bars_less = Url("progress-bars.less");
                public static readonly string responsive_embed_less = Url("responsive-embed.less");
                public static readonly string responsive_utilities_less = Url("responsive-utilities.less");
                public static readonly string scaffolding_less = Url("scaffolding.less");
                public static readonly string tables_less = Url("tables.less");
                public static readonly string theme_less = Url("theme.less");
                public static readonly string thumbnails_less = Url("thumbnails.less");
                public static readonly string tooltip_less = Url("tooltip.less");
                public static readonly string type_less = Url("type.less");
                public static readonly string utilities_less = Url("utilities.less");
                public static readonly string variables_less = Url("variables.less");
                public static readonly string wells_less = Url("wells.less");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class custom {
                private const string URLPATH = "~/Content/css/custom";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string ayende_styles_less = Url("ayende.styles.less");
                public static readonly string ayende_styles_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ayende.styles.min.css") ? Url("ayende.styles.min.css") : Url("ayende.styles.css");
                     
                public static readonly string ayende_styles_css_map = Url("ayende.styles.css.map");
                public static readonly string ayende_styles_min_css = Url("ayende.styles.min.css");
                public static readonly string ayende_variables_less = Url("ayende.variables.less");
                public static readonly string ayende_variables_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ayende.variables.min.css") ? Url("ayende.variables.min.css") : Url("ayende.variables.css");
                     
                public static readonly string ayende_variables_css_map = Url("ayende.variables.css.map");
                public static readonly string ayende_variables_min_css = Url("ayende.variables.min.css");
            }
        
            public static readonly string error_less = Url("error.less");
            public static readonly string error_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/error.min.css") ? Url("error.min.css") : Url("error.css");
                 
            public static readonly string error_min_css = Url("error.min.css");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class fonts {
                private const string URLPATH = "~/Content/css/fonts";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string glyphicons_halflings_regular_eot = Url("glyphicons-halflings-regular.eot");
                public static readonly string glyphicons_halflings_regular_svg = Url("glyphicons-halflings-regular.svg");
                public static readonly string glyphicons_halflings_regular_ttf = Url("glyphicons-halflings-regular.ttf");
                public static readonly string glyphicons_halflings_regular_woff = Url("glyphicons-halflings-regular.woff");
                public static readonly string glyphicons_halflings_regular_woff2 = Url("glyphicons-halflings-regular.woff2");
                public static readonly string socicon_webfont_eot = Url("socicon-webfont.eot");
                public static readonly string socicon_webfont_svg = Url("socicon-webfont.svg");
                public static readonly string socicon_webfont_ttf = Url("socicon-webfont.ttf");
                public static readonly string socicon_webfont_woff = Url("socicon-webfont.woff");
                public static readonly string socicon_webfont_woff2 = Url("socicon-webfont.woff2");
            }
        
            public static readonly string fullcalendar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fullcalendar.min.css") ? Url("fullcalendar.min.css") : Url("fullcalendar.css");
                 
            public static readonly string fullcalendar_min_css = Url("fullcalendar.min.css");
            public static readonly string fullcalendar_print_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fullcalendar.print.min.css") ? Url("fullcalendar.print.min.css") : Url("fullcalendar.print.css");
                 
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class img {
                private const string URLPATH = "~/Content/css/img";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string commentDate_png = Url("commentDate.png");
                public static readonly string commentDateImp_png = Url("commentDateImp.png");
                public static readonly string commentPreviewDate_png = Url("commentPreviewDate.png");
                public static readonly string error_png = Url("error.png");
                public static readonly string ico_grid_active_svg = Url("ico_grid_active.svg");
                public static readonly string ico_grid_inactive_svg = Url("ico_grid_inactive.svg");
                public static readonly string ico_mail_svg = Url("ico_mail.svg");
                public static readonly string ico_phone_svg = Url("ico_phone.svg");
                public static readonly string ico_stack_active_svg = Url("ico_stack_active.svg");
                public static readonly string ico_stack_inactive_svg = Url("ico_stack_inactive.svg");
                public static readonly string logo_vertical_svg = Url("logo-vertical.svg");
                public static readonly string logo_svg = Url("logo.svg");
                public static readonly string mdd_ajax_loader_gif = Url("mdd_ajax_loader.gif");
                public static readonly string mdd_gripper_png = Url("mdd_gripper.png");
                public static readonly string mdd_modal_background_png = Url("mdd_modal_background.png");
                public static readonly string mdd_toolbar_png = Url("mdd_toolbar.png");
                public static readonly string readmore_png = Url("readmore.png");
                public static readonly string readmore2_png = Url("readmore2.png");
                public static readonly string rihno_svg = Url("rihno.svg");
                public static readonly string rss_png = Url("rss.png");
                public static readonly string search_icon_svg = Url("search-icon.svg");
                public static readonly string side_bkg_jpg = Url("side_bkg.jpg");
                public static readonly string side_bkg_png = Url("side_bkg.png");
            }
        
            public static readonly string mdd_styles_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/mdd_styles.min.css") ? Url("mdd_styles.min.css") : Url("mdd_styles.css");
                 
            public static readonly string prism_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/prism.min.css") ? Url("prism.min.css") : Url("prism.css");
                 
            public static readonly string socicon_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/socicon.min.css") ? Url("socicon.min.css") : Url("socicon.css");
                 
            public static readonly string styles_less = Url("styles.less");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class fonts {
            private const string URLPATH = "~/Content/fonts";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string glyphicons_halflings_regular_eot = Url("glyphicons-halflings-regular.eot");
            public static readonly string glyphicons_halflings_regular_svg = Url("glyphicons-halflings-regular.svg");
            public static readonly string glyphicons_halflings_regular_ttf = Url("glyphicons-halflings-regular.ttf");
            public static readonly string glyphicons_halflings_regular_woff = Url("glyphicons-halflings-regular.woff");
            public static readonly string glyphicons_halflings_regular_woff2 = Url("glyphicons-halflings-regular.woff2");
            public static readonly string socicon_webfont_eot = Url("socicon-webfont.eot");
            public static readonly string socicon_webfont_svg = Url("socicon-webfont.svg");
            public static readonly string socicon_webfont_ttf = Url("socicon-webfont.ttf");
            public static readonly string socicon_webfont_woff = Url("socicon-webfont.woff");
            public static readonly string socicon_webfont_woff2 = Url("socicon-webfont.woff2");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class images {
            private const string URLPATH = "~/Content/images";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class js {
            private const string URLPATH = "~/Content/js";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string anytime_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/anytime.min.js") ? Url("anytime.min.js") : Url("anytime.js");
            public static readonly string anytime_min_js = Url("anytime.min.js");
            public static readonly string bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.js") ? Url("bootstrap.min.js") : Url("bootstrap.js");
            public static readonly string bootstrap_min_js = Url("bootstrap.min.js");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class ckeditor {
                private const string URLPATH = "~/Content/js/ckeditor";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string _htaccess = Url(".htaccess");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class adapters {
                    private const string URLPATH = "~/Content/js/ckeditor/adapters";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string jquery_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.min.js") ? Url("jquery.min.js") : Url("jquery.js");
                }
            
                public static readonly string CHANGES_html = Url("CHANGES.html");
                public static readonly string ckeditor_asp = Url("ckeditor.asp");
                public static readonly string ckeditor_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ckeditor.min.js") ? Url("ckeditor.min.js") : Url("ckeditor.js");
                public static readonly string ckeditor_pack = Url("ckeditor.pack");
                public static readonly string ckeditor_php = Url("ckeditor.php");
                public static readonly string ckeditor_basic_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ckeditor_basic.min.js") ? Url("ckeditor_basic.min.js") : Url("ckeditor_basic.js");
                public static readonly string ckeditor_basic_source_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ckeditor_basic_source.min.js") ? Url("ckeditor_basic_source.min.js") : Url("ckeditor_basic_source.js");
                public static readonly string ckeditor_php4_php = Url("ckeditor_php4.php");
                public static readonly string ckeditor_php5_php = Url("ckeditor_php5.php");
                public static readonly string ckeditor_source_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ckeditor_source.min.js") ? Url("ckeditor_source.min.js") : Url("ckeditor_source.js");
                public static readonly string config_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/config.min.js") ? Url("config.min.js") : Url("config.js");
                public static readonly string contents_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/contents.min.css") ? Url("contents.min.css") : Url("contents.css");
                     
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class images {
                    private const string URLPATH = "~/Content/js/ckeditor/images";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string spacer_gif = Url("spacer.gif");
                }
            
                public static readonly string INSTALL_html = Url("INSTALL.html");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class lang {
                    private const string URLPATH = "~/Content/js/ckeditor/lang";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string _languages_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/_languages.min.js") ? Url("_languages.min.js") : Url("_languages.js");
                    public static readonly string _translationstatus_txt = Url("_translationstatus.txt");
                    public static readonly string af_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/af.min.js") ? Url("af.min.js") : Url("af.js");
                    public static readonly string ar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ar.min.js") ? Url("ar.min.js") : Url("ar.js");
                    public static readonly string bg_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bg.min.js") ? Url("bg.min.js") : Url("bg.js");
                    public static readonly string bn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bn.min.js") ? Url("bn.min.js") : Url("bn.js");
                    public static readonly string bs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bs.min.js") ? Url("bs.min.js") : Url("bs.js");
                    public static readonly string ca_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ca.min.js") ? Url("ca.min.js") : Url("ca.js");
                    public static readonly string cs_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cs.min.js") ? Url("cs.min.js") : Url("cs.js");
                    public static readonly string cy_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/cy.min.js") ? Url("cy.min.js") : Url("cy.js");
                    public static readonly string da_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/da.min.js") ? Url("da.min.js") : Url("da.js");
                    public static readonly string de_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/de.min.js") ? Url("de.min.js") : Url("de.js");
                    public static readonly string el_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/el.min.js") ? Url("el.min.js") : Url("el.js");
                    public static readonly string en_au_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en-au.min.js") ? Url("en-au.min.js") : Url("en-au.js");
                    public static readonly string en_ca_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en-ca.min.js") ? Url("en-ca.min.js") : Url("en-ca.js");
                    public static readonly string en_gb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en-gb.min.js") ? Url("en-gb.min.js") : Url("en-gb.js");
                    public static readonly string en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en.min.js") ? Url("en.min.js") : Url("en.js");
                    public static readonly string eo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/eo.min.js") ? Url("eo.min.js") : Url("eo.js");
                    public static readonly string es_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/es.min.js") ? Url("es.min.js") : Url("es.js");
                    public static readonly string et_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/et.min.js") ? Url("et.min.js") : Url("et.js");
                    public static readonly string eu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/eu.min.js") ? Url("eu.min.js") : Url("eu.js");
                    public static readonly string fa_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fa.min.js") ? Url("fa.min.js") : Url("fa.js");
                    public static readonly string fi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fi.min.js") ? Url("fi.min.js") : Url("fi.js");
                    public static readonly string fo_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fo.min.js") ? Url("fo.min.js") : Url("fo.js");
                    public static readonly string fr_ca_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fr-ca.min.js") ? Url("fr-ca.min.js") : Url("fr-ca.js");
                    public static readonly string fr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fr.min.js") ? Url("fr.min.js") : Url("fr.js");
                    public static readonly string gl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/gl.min.js") ? Url("gl.min.js") : Url("gl.js");
                    public static readonly string gu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/gu.min.js") ? Url("gu.min.js") : Url("gu.js");
                    public static readonly string he_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/he.min.js") ? Url("he.min.js") : Url("he.js");
                    public static readonly string hi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/hi.min.js") ? Url("hi.min.js") : Url("hi.js");
                    public static readonly string hr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/hr.min.js") ? Url("hr.min.js") : Url("hr.js");
                    public static readonly string hu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/hu.min.js") ? Url("hu.min.js") : Url("hu.js");
                    public static readonly string is_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/is.min.js") ? Url("is.min.js") : Url("is.js");
                    public static readonly string it_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/it.min.js") ? Url("it.min.js") : Url("it.js");
                    public static readonly string ja_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ja.min.js") ? Url("ja.min.js") : Url("ja.js");
                    public static readonly string ka_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ka.min.js") ? Url("ka.min.js") : Url("ka.js");
                    public static readonly string km_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/km.min.js") ? Url("km.min.js") : Url("km.js");
                    public static readonly string ko_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ko.min.js") ? Url("ko.min.js") : Url("ko.js");
                    public static readonly string lt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lt.min.js") ? Url("lt.min.js") : Url("lt.js");
                    public static readonly string lv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/lv.min.js") ? Url("lv.min.js") : Url("lv.js");
                    public static readonly string mn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/mn.min.js") ? Url("mn.min.js") : Url("mn.js");
                    public static readonly string ms_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ms.min.js") ? Url("ms.min.js") : Url("ms.js");
                    public static readonly string nb_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/nb.min.js") ? Url("nb.min.js") : Url("nb.js");
                    public static readonly string nl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/nl.min.js") ? Url("nl.min.js") : Url("nl.js");
                    public static readonly string no_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/no.min.js") ? Url("no.min.js") : Url("no.js");
                    public static readonly string pl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pl.min.js") ? Url("pl.min.js") : Url("pl.js");
                    public static readonly string pt_br_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pt-br.min.js") ? Url("pt-br.min.js") : Url("pt-br.js");
                    public static readonly string pt_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pt.min.js") ? Url("pt.min.js") : Url("pt.js");
                    public static readonly string ro_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ro.min.js") ? Url("ro.min.js") : Url("ro.js");
                    public static readonly string ru_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ru.min.js") ? Url("ru.min.js") : Url("ru.js");
                    public static readonly string sk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sk.min.js") ? Url("sk.min.js") : Url("sk.js");
                    public static readonly string sl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sl.min.js") ? Url("sl.min.js") : Url("sl.js");
                    public static readonly string sr_latn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sr-latn.min.js") ? Url("sr-latn.min.js") : Url("sr-latn.js");
                    public static readonly string sr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sr.min.js") ? Url("sr.min.js") : Url("sr.js");
                    public static readonly string sv_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sv.min.js") ? Url("sv.min.js") : Url("sv.js");
                    public static readonly string th_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/th.min.js") ? Url("th.min.js") : Url("th.js");
                    public static readonly string tr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tr.min.js") ? Url("tr.min.js") : Url("tr.js");
                    public static readonly string uk_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/uk.min.js") ? Url("uk.min.js") : Url("uk.js");
                    public static readonly string vi_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/vi.min.js") ? Url("vi.min.js") : Url("vi.js");
                    public static readonly string zh_cn_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/zh-cn.min.js") ? Url("zh-cn.min.js") : Url("zh-cn.js");
                    public static readonly string zh_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/zh.min.js") ? Url("zh.min.js") : Url("zh.js");
                }
            
                public static readonly string LICENSE_html = Url("LICENSE.html");
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class plugins {
                    private const string URLPATH = "~/Content/js/ckeditor/plugins";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class a11yhelp {
                        private const string URLPATH = "~/Content/js/ckeditor/plugins/a11yhelp";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class dialogs {
                            private const string URLPATH = "~/Content/js/ckeditor/plugins/a11yhelp/dialogs";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string a11yhelp_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/a11yhelp.min.js") ? Url("a11yhelp.min.js") : Url("a11yhelp.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class lang {
                            private const string URLPATH = "~/Content/js/ckeditor/plugins/a11yhelp/lang";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en.min.js") ? Url("en.min.js") : Url("en.js");
                            public static readonly string he_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/he.min.js") ? Url("he.min.js") : Url("he.js");
                        }
                    
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class about {
                        private const string URLPATH = "~/Content/js/ckeditor/plugins/about";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class dialogs {
                            private const string URLPATH = "~/Content/js/ckeditor/plugins/about/dialogs";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string about_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/about.min.js") ? Url("about.min.js") : Url("about.js");
                            public static readonly string logo_ckeditor_png = Url("logo_ckeditor.png");
                        }
                    
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class adobeair {
                        private const string URLPATH = "~/Content/js/ckeditor/plugins/adobeair";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class ajax {
                        private const string URLPATH = "~/Content/js/ckeditor/plugins/ajax";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class autogrow {
                        private const string URLPATH = "~/Content/js/ckeditor/plugins/autogrow";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class bbcode {
                        private const string URLPATH = "~/Content/js/ckeditor/plugins/bbcode";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class clipboard {
                        private const string URLPATH = "~/Content/js/ckeditor/plugins/clipboard";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class dialogs {
                            private const string URLPATH = "~/Content/js/ckeditor/plugins/clipboard/dialogs";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string paste_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/paste.min.js") ? Url("paste.min.js") : Url("paste.js");
                        }
                    
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class colordialog {
                        private const string URLPATH = "~/Content/js/ckeditor/plugins/colordialog";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class dialogs {
                            private const string URLPATH = "~/Content/js/ckeditor/plugins/colordialog/dialogs";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string colordialog_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/colordialog.min.js") ? Url("colordialog.min.js") : Url("colordialog.js");
                        }
                    
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class devtools {
                        private const string URLPATH = "~/Content/js/ckeditor/plugins/devtools";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class lang {
                            private const string URLPATH = "~/Content/js/ckeditor/plugins/devtools/lang";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en.min.js") ? Url("en.min.js") : Url("en.js");
                        }
                    
                        public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class dialog {
                        private const string URLPATH = "~/Content/js/ckeditor/plugins/dialog";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string dialogDefinition_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialogDefinition.min.js") ? Url("dialogDefinition.min.js") : Url("dialogDefinition.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class div {
                        private const string URLPATH = "~/Content/js/ckeditor/plugins/div";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class dialogs {
                            private const string URLPATH = "~/Content/js/ckeditor/plugins/div/dialogs";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string div_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/div.min.js") ? Url("div.min.js") : Url("div.js");
                        }
                    
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class docprops {
                        private const string URLPATH = "~/Content/js/ckeditor/plugins/docprops";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class dialogs {
                            private const string URLPATH = "~/Content/js/ckeditor/plugins/docprops/dialogs";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string docprops_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/docprops.min.js") ? Url("docprops.min.js") : Url("docprops.js");
                        }
                    
                        public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class find {
                        private const string URLPATH = "~/Content/js/ckeditor/plugins/find";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class dialogs {
                            private const string URLPATH = "~/Content/js/ckeditor/plugins/find/dialogs";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string find_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/find.min.js") ? Url("find.min.js") : Url("find.js");
                        }
                    
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class flash {
                        private const string URLPATH = "~/Content/js/ckeditor/plugins/flash";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class dialogs {
                            private const string URLPATH = "~/Content/js/ckeditor/plugins/flash/dialogs";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string flash_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/flash.min.js") ? Url("flash.min.js") : Url("flash.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class images {
                            private const string URLPATH = "~/Content/js/ckeditor/plugins/flash/images";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string placeholder_png = Url("placeholder.png");
                        }
                    
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class forms {
                        private const string URLPATH = "~/Content/js/ckeditor/plugins/forms";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class dialogs {
                            private const string URLPATH = "~/Content/js/ckeditor/plugins/forms/dialogs";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string button_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/button.min.js") ? Url("button.min.js") : Url("button.js");
                            public static readonly string checkbox_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/checkbox.min.js") ? Url("checkbox.min.js") : Url("checkbox.js");
                            public static readonly string form_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/form.min.js") ? Url("form.min.js") : Url("form.js");
                            public static readonly string hiddenfield_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/hiddenfield.min.js") ? Url("hiddenfield.min.js") : Url("hiddenfield.js");
                            public static readonly string radio_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/radio.min.js") ? Url("radio.min.js") : Url("radio.js");
                            public static readonly string select_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/select.min.js") ? Url("select.min.js") : Url("select.js");
                            public static readonly string textarea_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/textarea.min.js") ? Url("textarea.min.js") : Url("textarea.js");
                            public static readonly string textfield_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/textfield.min.js") ? Url("textfield.min.js") : Url("textfield.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class images {
                            private const string URLPATH = "~/Content/js/ckeditor/plugins/forms/images";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string hiddenfield_gif = Url("hiddenfield.gif");
                        }
                    
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class iframe {
                        private const string URLPATH = "~/Content/js/ckeditor/plugins/iframe";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class dialogs {
                            private const string URLPATH = "~/Content/js/ckeditor/plugins/iframe/dialogs";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string iframe_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/iframe.min.js") ? Url("iframe.min.js") : Url("iframe.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class images {
                            private const string URLPATH = "~/Content/js/ckeditor/plugins/iframe/images";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string placeholder_png = Url("placeholder.png");
                        }
                    
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class iframedialog {
                        private const string URLPATH = "~/Content/js/ckeditor/plugins/iframedialog";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class image {
                        private const string URLPATH = "~/Content/js/ckeditor/plugins/image";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class dialogs {
                            private const string URLPATH = "~/Content/js/ckeditor/plugins/image/dialogs";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string image_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/image.min.js") ? Url("image.min.js") : Url("image.js");
                        }
                    
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class link {
                        private const string URLPATH = "~/Content/js/ckeditor/plugins/link";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class dialogs {
                            private const string URLPATH = "~/Content/js/ckeditor/plugins/link/dialogs";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string anchor_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/anchor.min.js") ? Url("anchor.min.js") : Url("anchor.js");
                            public static readonly string link_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/link.min.js") ? Url("link.min.js") : Url("link.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class images {
                            private const string URLPATH = "~/Content/js/ckeditor/plugins/link/images";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string anchor_gif = Url("anchor.gif");
                        }
                    
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class liststyle {
                        private const string URLPATH = "~/Content/js/ckeditor/plugins/liststyle";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class dialogs {
                            private const string URLPATH = "~/Content/js/ckeditor/plugins/liststyle/dialogs";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string liststyle_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/liststyle.min.js") ? Url("liststyle.min.js") : Url("liststyle.js");
                        }
                    
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class pagebreak {
                        private const string URLPATH = "~/Content/js/ckeditor/plugins/pagebreak";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class images {
                            private const string URLPATH = "~/Content/js/ckeditor/plugins/pagebreak/images";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string pagebreak_gif = Url("pagebreak.gif");
                        }
                    
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class pastefromword {
                        private const string URLPATH = "~/Content/js/ckeditor/plugins/pastefromword";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class filter {
                            private const string URLPATH = "~/Content/js/ckeditor/plugins/pastefromword/filter";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string default_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/default.min.js") ? Url("default.min.js") : Url("default.js");
                        }
                    
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class pastetext {
                        private const string URLPATH = "~/Content/js/ckeditor/plugins/pastetext";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class dialogs {
                            private const string URLPATH = "~/Content/js/ckeditor/plugins/pastetext/dialogs";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string pastetext_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/pastetext.min.js") ? Url("pastetext.min.js") : Url("pastetext.js");
                        }
                    
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class placeholder {
                        private const string URLPATH = "~/Content/js/ckeditor/plugins/placeholder";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class dialogs {
                            private const string URLPATH = "~/Content/js/ckeditor/plugins/placeholder/dialogs";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string placeholder_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/placeholder.min.js") ? Url("placeholder.min.js") : Url("placeholder.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class lang {
                            private const string URLPATH = "~/Content/js/ckeditor/plugins/placeholder/lang";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en.min.js") ? Url("en.min.js") : Url("en.js");
                            public static readonly string he_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/he.min.js") ? Url("he.min.js") : Url("he.js");
                        }
                    
                        public static readonly string placeholder_gif = Url("placeholder.gif");
                        public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class scayt {
                        private const string URLPATH = "~/Content/js/ckeditor/plugins/scayt";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class dialogs {
                            private const string URLPATH = "~/Content/js/ckeditor/plugins/scayt/dialogs";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string options_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/options.min.js") ? Url("options.min.js") : Url("options.js");
                            public static readonly string toolbar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/toolbar.min.css") ? Url("toolbar.min.css") : Url("toolbar.css");
                                 
                        }
                    
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class showblocks {
                        private const string URLPATH = "~/Content/js/ckeditor/plugins/showblocks";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class images {
                            private const string URLPATH = "~/Content/js/ckeditor/plugins/showblocks/images";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string block_address_png = Url("block_address.png");
                            public static readonly string block_blockquote_png = Url("block_blockquote.png");
                            public static readonly string block_div_png = Url("block_div.png");
                            public static readonly string block_h1_png = Url("block_h1.png");
                            public static readonly string block_h2_png = Url("block_h2.png");
                            public static readonly string block_h3_png = Url("block_h3.png");
                            public static readonly string block_h4_png = Url("block_h4.png");
                            public static readonly string block_h5_png = Url("block_h5.png");
                            public static readonly string block_h6_png = Url("block_h6.png");
                            public static readonly string block_p_png = Url("block_p.png");
                            public static readonly string block_pre_png = Url("block_pre.png");
                        }
                    
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class smiley {
                        private const string URLPATH = "~/Content/js/ckeditor/plugins/smiley";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class dialogs {
                            private const string URLPATH = "~/Content/js/ckeditor/plugins/smiley/dialogs";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string smiley_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/smiley.min.js") ? Url("smiley.min.js") : Url("smiley.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class images {
                            private const string URLPATH = "~/Content/js/ckeditor/plugins/smiley/images";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string angel_smile_gif = Url("angel_smile.gif");
                            public static readonly string angry_smile_gif = Url("angry_smile.gif");
                            public static readonly string broken_heart_gif = Url("broken_heart.gif");
                            public static readonly string confused_smile_gif = Url("confused_smile.gif");
                            public static readonly string cry_smile_gif = Url("cry_smile.gif");
                            public static readonly string devil_smile_gif = Url("devil_smile.gif");
                            public static readonly string embaressed_smile_gif = Url("embaressed_smile.gif");
                            public static readonly string envelope_gif = Url("envelope.gif");
                            public static readonly string heart_gif = Url("heart.gif");
                            public static readonly string kiss_gif = Url("kiss.gif");
                            public static readonly string lightbulb_gif = Url("lightbulb.gif");
                            public static readonly string omg_smile_gif = Url("omg_smile.gif");
                            public static readonly string regular_smile_gif = Url("regular_smile.gif");
                            public static readonly string sad_smile_gif = Url("sad_smile.gif");
                            public static readonly string shades_smile_gif = Url("shades_smile.gif");
                            public static readonly string teeth_smile_gif = Url("teeth_smile.gif");
                            public static readonly string thumbs_down_gif = Url("thumbs_down.gif");
                            public static readonly string thumbs_up_gif = Url("thumbs_up.gif");
                            public static readonly string tounge_smile_gif = Url("tounge_smile.gif");
                            public static readonly string whatchutalkingabout_smile_gif = Url("whatchutalkingabout_smile.gif");
                            public static readonly string wink_smile_gif = Url("wink_smile.gif");
                        }
                    
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class specialchar {
                        private const string URLPATH = "~/Content/js/ckeditor/plugins/specialchar";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class dialogs {
                            private const string URLPATH = "~/Content/js/ckeditor/plugins/specialchar/dialogs";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string specialchar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/specialchar.min.js") ? Url("specialchar.min.js") : Url("specialchar.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class lang {
                            private const string URLPATH = "~/Content/js/ckeditor/plugins/specialchar/lang";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en.min.js") ? Url("en.min.js") : Url("en.js");
                        }
                    
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class styles {
                        private const string URLPATH = "~/Content/js/ckeditor/plugins/styles";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class styles_ {
                            private const string URLPATH = "~/Content/js/ckeditor/plugins/styles/styles";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string default_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/default.min.js") ? Url("default.min.js") : Url("default.js");
                        }
                    
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class stylesheetparser {
                        private const string URLPATH = "~/Content/js/ckeditor/plugins/stylesheetparser";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class table {
                        private const string URLPATH = "~/Content/js/ckeditor/plugins/table";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class dialogs {
                            private const string URLPATH = "~/Content/js/ckeditor/plugins/table/dialogs";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string table_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/table.min.js") ? Url("table.min.js") : Url("table.js");
                        }
                    
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class tableresize {
                        private const string URLPATH = "~/Content/js/ckeditor/plugins/tableresize";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class tabletools {
                        private const string URLPATH = "~/Content/js/ckeditor/plugins/tabletools";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class dialogs {
                            private const string URLPATH = "~/Content/js/ckeditor/plugins/tabletools/dialogs";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string tableCell_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tableCell.min.js") ? Url("tableCell.min.js") : Url("tableCell.js");
                        }
                    
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class templates {
                        private const string URLPATH = "~/Content/js/ckeditor/plugins/templates";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class dialogs {
                            private const string URLPATH = "~/Content/js/ckeditor/plugins/templates/dialogs";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string templates_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/templates.min.js") ? Url("templates.min.js") : Url("templates.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class templates_ {
                            private const string URLPATH = "~/Content/js/ckeditor/plugins/templates/templates";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string default_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/default.min.js") ? Url("default.min.js") : Url("default.js");
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class images {
                                private const string URLPATH = "~/Content/js/ckeditor/plugins/templates/templates/images";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                public static readonly string template1_gif = Url("template1.gif");
                                public static readonly string template2_gif = Url("template2.gif");
                                public static readonly string template3_gif = Url("template3.gif");
                            }
                        
                        }
                    
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class uicolor {
                        private const string URLPATH = "~/Content/js/ckeditor/plugins/uicolor";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class dialogs {
                            private const string URLPATH = "~/Content/js/ckeditor/plugins/uicolor/dialogs";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string uicolor_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/uicolor.min.js") ? Url("uicolor.min.js") : Url("uicolor.js");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class lang {
                            private const string URLPATH = "~/Content/js/ckeditor/plugins/uicolor/lang";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string en_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/en.min.js") ? Url("en.min.js") : Url("en.js");
                            public static readonly string he_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/he.min.js") ? Url("he.min.js") : Url("he.js");
                        }
                    
                        public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                        public static readonly string uicolor_gif = Url("uicolor.gif");
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class yui {
                            private const string URLPATH = "~/Content/js/ckeditor/plugins/uicolor/yui";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class assets {
                                private const string URLPATH = "~/Content/js/ckeditor/plugins/uicolor/yui/assets";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                public static readonly string hue_bg_png = Url("hue_bg.png");
                                public static readonly string hue_thumb_png = Url("hue_thumb.png");
                                public static readonly string picker_mask_png = Url("picker_mask.png");
                                public static readonly string picker_thumb_png = Url("picker_thumb.png");
                                public static readonly string yui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/yui.min.css") ? Url("yui.min.css") : Url("yui.css");
                                     
                            }
                        
                            public static readonly string yui_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/yui.min.js") ? Url("yui.min.js") : Url("yui.js");
                        }
                    
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class wsc {
                        private const string URLPATH = "~/Content/js/ckeditor/plugins/wsc";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class dialogs {
                            private const string URLPATH = "~/Content/js/ckeditor/plugins/wsc/dialogs";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string ciframe_html = Url("ciframe.html");
                            public static readonly string tmpFrameset_html = Url("tmpFrameset.html");
                            public static readonly string wsc_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/wsc.min.css") ? Url("wsc.min.css") : Url("wsc.css");
                                 
                            public static readonly string wsc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/wsc.min.js") ? Url("wsc.min.js") : Url("wsc.js");
                        }
                    
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class xml {
                        private const string URLPATH = "~/Content/js/ckeditor/plugins/xml";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string plugin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/plugin.min.js") ? Url("plugin.min.js") : Url("plugin.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class skins {
                    private const string URLPATH = "~/Content/js/ckeditor/skins";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class kama {
                        private const string URLPATH = "~/Content/js/ckeditor/skins/kama";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog.min.css") ? Url("dialog.min.css") : Url("dialog.css");
                             
                        public static readonly string editor_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor.min.css") ? Url("editor.min.css") : Url("editor.css");
                             
                        public static readonly string icons_png = Url("icons.png");
                        public static readonly string icons_rtl_png = Url("icons_rtl.png");
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class images {
                            private const string URLPATH = "~/Content/js/ckeditor/skins/kama/images";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string dialog_sides_gif = Url("dialog_sides.gif");
                            public static readonly string dialog_sides_png = Url("dialog_sides.png");
                            public static readonly string dialog_sides_rtl_png = Url("dialog_sides_rtl.png");
                            public static readonly string mini_gif = Url("mini.gif");
                            public static readonly string noimage_png = Url("noimage.png");
                            public static readonly string sprites_png = Url("sprites.png");
                            public static readonly string sprites_ie6_png = Url("sprites_ie6.png");
                            public static readonly string toolbar_start_gif = Url("toolbar_start.gif");
                        }
                    
                        public static readonly string skin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/skin.min.js") ? Url("skin.min.js") : Url("skin.js");
                        public static readonly string templates_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/templates.min.css") ? Url("templates.min.css") : Url("templates.css");
                             
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class office2003 {
                        private const string URLPATH = "~/Content/js/ckeditor/skins/office2003";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog.min.css") ? Url("dialog.min.css") : Url("dialog.css");
                             
                        public static readonly string editor_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor.min.css") ? Url("editor.min.css") : Url("editor.css");
                             
                        public static readonly string icons_png = Url("icons.png");
                        public static readonly string icons_rtl_png = Url("icons_rtl.png");
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class images {
                            private const string URLPATH = "~/Content/js/ckeditor/skins/office2003/images";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string dialog_sides_gif = Url("dialog_sides.gif");
                            public static readonly string dialog_sides_png = Url("dialog_sides.png");
                            public static readonly string dialog_sides_rtl_png = Url("dialog_sides_rtl.png");
                            public static readonly string mini_gif = Url("mini.gif");
                            public static readonly string noimage_png = Url("noimage.png");
                            public static readonly string sprites_png = Url("sprites.png");
                            public static readonly string sprites_ie6_png = Url("sprites_ie6.png");
                        }
                    
                        public static readonly string skin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/skin.min.js") ? Url("skin.min.js") : Url("skin.js");
                        public static readonly string templates_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/templates.min.css") ? Url("templates.min.css") : Url("templates.css");
                             
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class v2 {
                        private const string URLPATH = "~/Content/js/ckeditor/skins/v2";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog.min.css") ? Url("dialog.min.css") : Url("dialog.css");
                             
                        public static readonly string editor_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/editor.min.css") ? Url("editor.min.css") : Url("editor.css");
                             
                        public static readonly string icons_png = Url("icons.png");
                        public static readonly string icons_rtl_png = Url("icons_rtl.png");
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class images {
                            private const string URLPATH = "~/Content/js/ckeditor/skins/v2/images";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string dialog_sides_gif = Url("dialog_sides.gif");
                            public static readonly string dialog_sides_png = Url("dialog_sides.png");
                            public static readonly string dialog_sides_rtl_png = Url("dialog_sides_rtl.png");
                            public static readonly string mini_gif = Url("mini.gif");
                            public static readonly string noimage_png = Url("noimage.png");
                            public static readonly string sprites_png = Url("sprites.png");
                            public static readonly string sprites_ie6_png = Url("sprites_ie6.png");
                            public static readonly string toolbar_start_gif = Url("toolbar_start.gif");
                        }
                    
                        public static readonly string skin_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/skin.min.js") ? Url("skin.min.js") : Url("skin.js");
                        public static readonly string templates_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/templates.min.css") ? Url("templates.min.css") : Url("templates.css");
                             
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class themes {
                    private const string URLPATH = "~/Content/js/ckeditor/themes";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class @default {
                        private const string URLPATH = "~/Content/js/ckeditor/themes/default";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string theme_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/theme.min.js") ? Url("theme.min.js") : Url("theme.js");
                    }
                
                }
            
            }
        
            public static readonly string date_f_0_5_0_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/date.f-0.5.0.min.js") ? Url("date.f-0.5.0.min.js") : Url("date.f-0.5.0.js");
            public static readonly string date_f_0_5_0_min_js = Url("date.f-0.5.0.min.js");
            public static readonly string fullcalendar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fullcalendar.min.js") ? Url("fullcalendar.min.js") : Url("fullcalendar.js");
            public static readonly string fullcalendar_min_js = Url("fullcalendar.min.js");
            public static readonly string jquery_1_11_2_intellisense_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-1.11.2.intellisense.min.js") ? Url("jquery-1.11.2.intellisense.min.js") : Url("jquery-1.11.2.intellisense.js");
            public static readonly string jquery_1_11_2_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-1.11.2.min.js") ? Url("jquery-1.11.2.min.js") : Url("jquery-1.11.2.js");
            public static readonly string jquery_1_11_2_min_js = Url("jquery-1.11.2.min.js");
            public static readonly string jquery_1_11_2_min_map = Url("jquery-1.11.2.min.map");
            public static readonly string jquery_migrate_1_2_1_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-migrate-1.2.1.min.js") ? Url("jquery-migrate-1.2.1.min.js") : Url("jquery-migrate-1.2.1.js");
            public static readonly string jquery_migrate_1_2_1_min_js = Url("jquery-migrate-1.2.1.min.js");
            public static readonly string jquery_ui_1_11_2_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-ui-1.11.2.min.js") ? Url("jquery-ui-1.11.2.min.js") : Url("jquery-ui-1.11.2.js");
            public static readonly string jquery_ui_1_11_2_min_js = Url("jquery-ui-1.11.2.min.js");
            public static readonly string jquery_md5_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.md5.min.js") ? Url("jquery.md5.min.js") : Url("jquery.md5.js");
            public static readonly string jquery_tmpl_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.tmpl.min.js") ? Url("jquery.tmpl.min.js") : Url("jquery.tmpl.js");
            public static readonly string jquery_tmpl_min_js = Url("jquery.tmpl.min.js");
            public static readonly string jquery_twbsPagination_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.twbsPagination.min.js") ? Url("jquery.twbsPagination.min.js") : Url("jquery.twbsPagination.js");
            public static readonly string jquery_twbsPagination_min_js = Url("jquery.twbsPagination.min.js");
            public static readonly string jquery_ui_core_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.core.min.js") ? Url("jquery.ui.core.min.js") : Url("jquery.ui.core.js");
            public static readonly string jquery_ui_core_min_js = Url("jquery.ui.core.min.js");
            public static readonly string jquery_unobtrusive_ajax_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.unobtrusive-ajax.min.js") ? Url("jquery.unobtrusive-ajax.min.js") : Url("jquery.unobtrusive-ajax.js");
            public static readonly string jquery_unobtrusive_ajax_min_js = Url("jquery.unobtrusive-ajax.min.js");
            public static readonly string jquery_validate_vsdoc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate-vsdoc.min.js") ? Url("jquery.validate-vsdoc.min.js") : Url("jquery.validate-vsdoc.js");
            public static readonly string jquery_validate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.min.js") ? Url("jquery.validate.min.js") : Url("jquery.validate.js");
            public static readonly string jquery_validate_min_js = Url("jquery.validate.min.js");
            public static readonly string jquery_validate_unobtrusive_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.unobtrusive.min.js") ? Url("jquery.validate.unobtrusive.min.js") : Url("jquery.validate.unobtrusive.js");
            public static readonly string jquery_validate_unobtrusive_min_js = Url("jquery.validate.unobtrusive.min.js");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class lib {
                private const string URLPATH = "~/Content/js/lib";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string MarkdownDeepLib_min_js = Url("MarkdownDeepLib.min.js");
            }
        
            public static readonly string moment_with_locales_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/moment-with-locales.min.js") ? Url("moment-with-locales.min.js") : Url("moment-with-locales.js");
            public static readonly string moment_with_locales_min_js = Url("moment-with-locales.min.js");
            public static readonly string moment_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/moment.min.js") ? Url("moment.min.js") : Url("moment.js");
            public static readonly string moment_min_js = Url("moment.min.js");
            public static readonly string raccoon_blog_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/raccoon-blog.min.js") ? Url("raccoon-blog.min.js") : Url("raccoon-blog.js");
            public static readonly string RequiredIfValidation_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/RequiredIfValidation.min.js") ? Url("RequiredIfValidation.min.js") : Url("RequiredIfValidation.js");
            public static readonly string respond_src_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/respond.src.min.js") ? Url("respond.src.min.js") : Url("respond.src.js");
            public static readonly string setup_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/setup.min.js") ? Url("setup.min.js") : Url("setup.js");
            public static readonly string showdown_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/showdown.min.js") ? Url("showdown.min.js") : Url("showdown.js");
            public static readonly string utils_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/utils.min.js") ? Url("utils.min.js") : Url("utils.js");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class license {
            private const string URLPATH = "~/Content/license";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string MarkdownDeep_License_txt = Url("MarkdownDeep License.txt");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class themes {
            private const string URLPATH = "~/Content/themes";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class @base {
                private const string URLPATH = "~/Content/themes/base";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string accordion_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/accordion.min.css") ? Url("accordion.min.css") : Url("accordion.css");
                     
                public static readonly string all_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/all.min.css") ? Url("all.min.css") : Url("all.css");
                     
                public static readonly string autocomplete_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/autocomplete.min.css") ? Url("autocomplete.min.css") : Url("autocomplete.css");
                     
                public static readonly string base_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/base.min.css") ? Url("base.min.css") : Url("base.css");
                     
                public static readonly string button_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/button.min.css") ? Url("button.min.css") : Url("button.css");
                     
                public static readonly string core_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/core.min.css") ? Url("core.min.css") : Url("core.css");
                     
                public static readonly string datepicker_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/datepicker.min.css") ? Url("datepicker.min.css") : Url("datepicker.css");
                     
                public static readonly string dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dialog.min.css") ? Url("dialog.min.css") : Url("dialog.css");
                     
                public static readonly string draggable_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/draggable.min.css") ? Url("draggable.min.css") : Url("draggable.css");
                     
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class images {
                    private const string URLPATH = "~/Content/themes/base/images";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string ui_bg_flat_0_aaaaaa_40x100_png = Url("ui-bg_flat_0_aaaaaa_40x100.png");
                    public static readonly string ui_bg_flat_75_ffffff_40x100_png = Url("ui-bg_flat_75_ffffff_40x100.png");
                    public static readonly string ui_bg_glass_55_fbf9ee_1x400_png = Url("ui-bg_glass_55_fbf9ee_1x400.png");
                    public static readonly string ui_bg_glass_65_ffffff_1x400_png = Url("ui-bg_glass_65_ffffff_1x400.png");
                    public static readonly string ui_bg_glass_75_dadada_1x400_png = Url("ui-bg_glass_75_dadada_1x400.png");
                    public static readonly string ui_bg_glass_75_e6e6e6_1x400_png = Url("ui-bg_glass_75_e6e6e6_1x400.png");
                    public static readonly string ui_bg_glass_95_fef1ec_1x400_png = Url("ui-bg_glass_95_fef1ec_1x400.png");
                    public static readonly string ui_bg_highlight_soft_75_cccccc_1x100_png = Url("ui-bg_highlight-soft_75_cccccc_1x100.png");
                    public static readonly string ui_icons_222222_256x240_png = Url("ui-icons_222222_256x240.png");
                    public static readonly string ui_icons_2e83ff_256x240_png = Url("ui-icons_2e83ff_256x240.png");
                    public static readonly string ui_icons_454545_256x240_png = Url("ui-icons_454545_256x240.png");
                    public static readonly string ui_icons_888888_256x240_png = Url("ui-icons_888888_256x240.png");
                    public static readonly string ui_icons_cd0a0a_256x240_png = Url("ui-icons_cd0a0a_256x240.png");
                }
            
                public static readonly string menu_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/menu.min.css") ? Url("menu.min.css") : Url("menu.css");
                     
                public static readonly string progressbar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/progressbar.min.css") ? Url("progressbar.min.css") : Url("progressbar.css");
                     
                public static readonly string resizable_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/resizable.min.css") ? Url("resizable.min.css") : Url("resizable.css");
                     
                public static readonly string selectable_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/selectable.min.css") ? Url("selectable.min.css") : Url("selectable.css");
                     
                public static readonly string selectmenu_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/selectmenu.min.css") ? Url("selectmenu.min.css") : Url("selectmenu.css");
                     
                public static readonly string slider_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/slider.min.css") ? Url("slider.min.css") : Url("slider.css");
                     
                public static readonly string sortable_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/sortable.min.css") ? Url("sortable.min.css") : Url("sortable.css");
                     
                public static readonly string spinner_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/spinner.min.css") ? Url("spinner.min.css") : Url("spinner.css");
                     
                public static readonly string tabs_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tabs.min.css") ? Url("tabs.min.css") : Url("tabs.css");
                     
                public static readonly string theme_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/theme.min.css") ? Url("theme.min.css") : Url("theme.css");
                     
                public static readonly string tooltip_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/tooltip.min.css") ? Url("tooltip.min.css") : Url("tooltip.css");
                     
            }
        
        }
    
    }


    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class Areas {
        private const string URLPATH = "~/Areas";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static partial class Admin {
            private const string URLPATH = "~/Areas/Admin";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class Content {
                private const string URLPATH = "~/Areas/Admin/Content";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class css {
                    private const string URLPATH = "~/Areas/Admin/Content/css";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string admin_styles_less = Url("admin.styles.less");
                    public static readonly string admin_variables_less = Url("admin.variables.less");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class bootstrap {
                        private const string URLPATH = "~/Areas/Admin/Content/css/bootstrap";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string bootstrap_extend_less = Url("bootstrap-extend.less");
                        public static readonly string bootstrap_extend_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-extend.min.css") ? Url("bootstrap-extend.min.css") : Url("bootstrap-extend.css");
                             
                        public static readonly string bootstrap_extend_css_map = Url("bootstrap-extend.css.map");
                        public static readonly string bootstrap_extend_min_css = Url("bootstrap-extend.min.css");
                    }
                
                    public static readonly string fullcalendar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fullcalendar.min.css") ? Url("fullcalendar.min.css") : Url("fullcalendar.css");
                         
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Areas/Admin/Content/css/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string content_repeat_jpg = Url("content_repeat.jpg");
                        public static readonly string nav_divider_jpg = Url("nav_divider.jpg");
                        public static readonly string nav_item_0_gif = Url("nav_item_0.gif");
                        public static readonly string nav_item_1_gif = Url("nav_item_1.gif");
                        public static readonly string nav_logout_gif = Url("nav_logout.gif");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class datepicker {
                    private const string URLPATH = "~/Areas/Admin/Content/datepicker";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class css {
                        private const string URLPATH = "~/Areas/Admin/Content/datepicker/css";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string bootstrap_datetimepicker_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-datetimepicker.min.css") ? Url("bootstrap-datetimepicker.min.css") : Url("bootstrap-datetimepicker.css");
                             
                        public static readonly string bootstrap_datetimepicker_min_css = Url("bootstrap-datetimepicker.min.css");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class js {
                        private const string URLPATH = "~/Areas/Admin/Content/datepicker/js";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string bootstrap_datetimepicker_min_js = Url("bootstrap-datetimepicker.min.js");
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class fonts {
                    private const string URLPATH = "~/Areas/Admin/Content/fonts";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string glyphicons_halflings_regular_eot = Url("glyphicons-halflings-regular.eot");
                    public static readonly string glyphicons_halflings_regular_svg = Url("glyphicons-halflings-regular.svg");
                    public static readonly string glyphicons_halflings_regular_ttf = Url("glyphicons-halflings-regular.ttf");
                    public static readonly string glyphicons_halflings_regular_woff = Url("glyphicons-halflings-regular.woff");
                    public static readonly string glyphicons_halflings_regular_woff2 = Url("glyphicons-halflings-regular.woff2");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class img {
                    private const string URLPATH = "~/Areas/Admin/Content/img";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string logo_svg = Url("logo.svg");
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class js {
                    private const string URLPATH = "~/Areas/Admin/Content/js";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class app {
                        private const string URLPATH = "~/Areas/Admin/Content/js/app";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string rssFutureAccess_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/rssFutureAccess.min.js") ? Url("rssFutureAccess.min.js") : Url("rssFutureAccess.js");
                    }
                
                    public static readonly string bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.js") ? Url("bootstrap.min.js") : Url("bootstrap.js");
                    public static readonly string fullcalendar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/fullcalendar.min.js") ? Url("fullcalendar.min.js") : Url("fullcalendar.js");
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class lib {
                        private const string URLPATH = "~/Areas/Admin/Content/js/lib";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string clipboard_min_js = Url("clipboard.min.js");
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class tinymce {
                        private const string URLPATH = "~/Areas/Admin/Content/js/tinymce";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class _notes {
                            private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/_notes";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string dwsync_xml = Url("dwsync.xml");
                        }
                    
                        public static readonly string changelog_txt = Url("changelog.txt");
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class langs {
                            private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/langs";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class _notes {
                                private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/langs/_notes";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                public static readonly string dwsync_xml = Url("dwsync.xml");
                            }
                        
                            public static readonly string readme_md = Url("readme.md");
                        }
                    
                        public static readonly string license_txt = Url("license.txt");
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class plugins {
                            private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class advlist {
                                private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/advlist";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class _notes {
                                    private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/advlist/_notes";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string dwsync_xml = Url("dwsync.xml");
                                }
                            
                                public static readonly string plugin_min_js = Url("plugin.min.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class anchor {
                                private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/anchor";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class _notes {
                                    private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/anchor/_notes";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string dwsync_xml = Url("dwsync.xml");
                                }
                            
                                public static readonly string plugin_min_js = Url("plugin.min.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class autolink {
                                private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/autolink";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class _notes {
                                    private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/autolink/_notes";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string dwsync_xml = Url("dwsync.xml");
                                }
                            
                                public static readonly string plugin_min_js = Url("plugin.min.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class autoresize {
                                private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/autoresize";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class _notes {
                                    private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/autoresize/_notes";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string dwsync_xml = Url("dwsync.xml");
                                }
                            
                                public static readonly string plugin_min_js = Url("plugin.min.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class autosave {
                                private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/autosave";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class _notes {
                                    private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/autosave/_notes";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string dwsync_xml = Url("dwsync.xml");
                                }
                            
                                public static readonly string plugin_min_js = Url("plugin.min.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class bbcode {
                                private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/bbcode";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class _notes {
                                    private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/bbcode/_notes";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string dwsync_xml = Url("dwsync.xml");
                                }
                            
                                public static readonly string plugin_min_js = Url("plugin.min.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class charmap {
                                private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/charmap";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class _notes {
                                    private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/charmap/_notes";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string dwsync_xml = Url("dwsync.xml");
                                }
                            
                                public static readonly string plugin_min_js = Url("plugin.min.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class code {
                                private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/code";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class _notes {
                                    private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/code/_notes";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string dwsync_xml = Url("dwsync.xml");
                                }
                            
                                public static readonly string plugin_min_js = Url("plugin.min.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class colorpicker {
                                private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/colorpicker";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class _notes {
                                    private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/colorpicker/_notes";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string dwsync_xml = Url("dwsync.xml");
                                }
                            
                                public static readonly string plugin_min_js = Url("plugin.min.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class contextmenu {
                                private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/contextmenu";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class _notes {
                                    private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/contextmenu/_notes";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string dwsync_xml = Url("dwsync.xml");
                                }
                            
                                public static readonly string plugin_min_js = Url("plugin.min.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class directionality {
                                private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/directionality";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class _notes {
                                    private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/directionality/_notes";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string dwsync_xml = Url("dwsync.xml");
                                }
                            
                                public static readonly string plugin_min_js = Url("plugin.min.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class emoticons {
                                private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/emoticons";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class _notes {
                                    private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/emoticons/_notes";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string dwsync_xml = Url("dwsync.xml");
                                }
                            
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class img {
                                    private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/emoticons/img";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                    public static class _notes {
                                        private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/emoticons/img/_notes";
                                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                        public static readonly string dwsync_xml = Url("dwsync.xml");
                                    }
                                
                                    public static readonly string smiley_cool_gif = Url("smiley-cool.gif");
                                    public static readonly string smiley_cry_gif = Url("smiley-cry.gif");
                                    public static readonly string smiley_embarassed_gif = Url("smiley-embarassed.gif");
                                    public static readonly string smiley_foot_in_mouth_gif = Url("smiley-foot-in-mouth.gif");
                                    public static readonly string smiley_frown_gif = Url("smiley-frown.gif");
                                    public static readonly string smiley_innocent_gif = Url("smiley-innocent.gif");
                                    public static readonly string smiley_kiss_gif = Url("smiley-kiss.gif");
                                    public static readonly string smiley_laughing_gif = Url("smiley-laughing.gif");
                                    public static readonly string smiley_money_mouth_gif = Url("smiley-money-mouth.gif");
                                    public static readonly string smiley_sealed_gif = Url("smiley-sealed.gif");
                                    public static readonly string smiley_smile_gif = Url("smiley-smile.gif");
                                    public static readonly string smiley_surprised_gif = Url("smiley-surprised.gif");
                                    public static readonly string smiley_tongue_out_gif = Url("smiley-tongue-out.gif");
                                    public static readonly string smiley_undecided_gif = Url("smiley-undecided.gif");
                                    public static readonly string smiley_wink_gif = Url("smiley-wink.gif");
                                    public static readonly string smiley_yell_gif = Url("smiley-yell.gif");
                                }
                            
                                public static readonly string plugin_min_js = Url("plugin.min.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class example {
                                private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/example";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class _notes {
                                    private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/example/_notes";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string dwsync_xml = Url("dwsync.xml");
                                }
                            
                                public static readonly string dialog_html = Url("dialog.html");
                                public static readonly string plugin_min_js = Url("plugin.min.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class example_dependency {
                                private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/example_dependency";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class _notes {
                                    private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/example_dependency/_notes";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string dwsync_xml = Url("dwsync.xml");
                                }
                            
                                public static readonly string plugin_min_js = Url("plugin.min.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class fullpage {
                                private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/fullpage";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class _notes {
                                    private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/fullpage/_notes";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string dwsync_xml = Url("dwsync.xml");
                                }
                            
                                public static readonly string plugin_min_js = Url("plugin.min.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class fullscreen {
                                private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/fullscreen";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class _notes {
                                    private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/fullscreen/_notes";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string dwsync_xml = Url("dwsync.xml");
                                }
                            
                                public static readonly string plugin_min_js = Url("plugin.min.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class hr {
                                private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/hr";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class _notes {
                                    private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/hr/_notes";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string dwsync_xml = Url("dwsync.xml");
                                }
                            
                                public static readonly string plugin_min_js = Url("plugin.min.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class image {
                                private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/image";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class _notes {
                                    private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/image/_notes";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string dwsync_xml = Url("dwsync.xml");
                                }
                            
                                public static readonly string plugin_min_js = Url("plugin.min.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class importcss {
                                private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/importcss";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class _notes {
                                    private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/importcss/_notes";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string dwsync_xml = Url("dwsync.xml");
                                }
                            
                                public static readonly string plugin_min_js = Url("plugin.min.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class insertdatetime {
                                private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/insertdatetime";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class _notes {
                                    private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/insertdatetime/_notes";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string dwsync_xml = Url("dwsync.xml");
                                }
                            
                                public static readonly string plugin_min_js = Url("plugin.min.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class layer {
                                private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/layer";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class _notes {
                                    private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/layer/_notes";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string dwsync_xml = Url("dwsync.xml");
                                }
                            
                                public static readonly string plugin_min_js = Url("plugin.min.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class legacyoutput {
                                private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/legacyoutput";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class _notes {
                                    private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/legacyoutput/_notes";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string dwsync_xml = Url("dwsync.xml");
                                }
                            
                                public static readonly string plugin_min_js = Url("plugin.min.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class link {
                                private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/link";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class _notes {
                                    private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/link/_notes";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string dwsync_xml = Url("dwsync.xml");
                                }
                            
                                public static readonly string plugin_min_js = Url("plugin.min.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class lists {
                                private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/lists";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class _notes {
                                    private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/lists/_notes";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string dwsync_xml = Url("dwsync.xml");
                                }
                            
                                public static readonly string plugin_min_js = Url("plugin.min.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class media {
                                private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/media";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class _notes {
                                    private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/media/_notes";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string dwsync_xml = Url("dwsync.xml");
                                }
                            
                                public static readonly string moxieplayer_swf = Url("moxieplayer.swf");
                                public static readonly string plugin_min_js = Url("plugin.min.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class nonbreaking {
                                private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/nonbreaking";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class _notes {
                                    private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/nonbreaking/_notes";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string dwsync_xml = Url("dwsync.xml");
                                }
                            
                                public static readonly string plugin_min_js = Url("plugin.min.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class noneditable {
                                private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/noneditable";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class _notes {
                                    private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/noneditable/_notes";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string dwsync_xml = Url("dwsync.xml");
                                }
                            
                                public static readonly string plugin_min_js = Url("plugin.min.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class pagebreak {
                                private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/pagebreak";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class _notes {
                                    private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/pagebreak/_notes";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string dwsync_xml = Url("dwsync.xml");
                                }
                            
                                public static readonly string plugin_min_js = Url("plugin.min.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class paste {
                                private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/paste";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class _notes {
                                    private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/paste/_notes";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string dwsync_xml = Url("dwsync.xml");
                                }
                            
                                public static readonly string plugin_min_js = Url("plugin.min.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class preview {
                                private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/preview";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class _notes {
                                    private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/preview/_notes";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string dwsync_xml = Url("dwsync.xml");
                                }
                            
                                public static readonly string plugin_min_js = Url("plugin.min.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class print {
                                private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/print";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class _notes {
                                    private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/print/_notes";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string dwsync_xml = Url("dwsync.xml");
                                }
                            
                                public static readonly string plugin_min_js = Url("plugin.min.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class save {
                                private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/save";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class _notes {
                                    private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/save/_notes";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string dwsync_xml = Url("dwsync.xml");
                                }
                            
                                public static readonly string plugin_min_js = Url("plugin.min.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class searchreplace {
                                private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/searchreplace";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class _notes {
                                    private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/searchreplace/_notes";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string dwsync_xml = Url("dwsync.xml");
                                }
                            
                                public static readonly string plugin_min_js = Url("plugin.min.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class spellchecker {
                                private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/spellchecker";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class _notes {
                                    private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/spellchecker/_notes";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string dwsync_xml = Url("dwsync.xml");
                                }
                            
                                public static readonly string plugin_min_js = Url("plugin.min.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class tabfocus {
                                private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/tabfocus";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class _notes {
                                    private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/tabfocus/_notes";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string dwsync_xml = Url("dwsync.xml");
                                }
                            
                                public static readonly string plugin_min_js = Url("plugin.min.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class table {
                                private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/table";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class _notes {
                                    private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/table/_notes";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string dwsync_xml = Url("dwsync.xml");
                                }
                            
                                public static readonly string plugin_min_js = Url("plugin.min.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class template {
                                private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/template";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class _notes {
                                    private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/template/_notes";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string dwsync_xml = Url("dwsync.xml");
                                }
                            
                                public static readonly string plugin_min_js = Url("plugin.min.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class textcolor {
                                private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/textcolor";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class _notes {
                                    private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/textcolor/_notes";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string dwsync_xml = Url("dwsync.xml");
                                }
                            
                                public static readonly string plugin_min_js = Url("plugin.min.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class textpattern {
                                private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/textpattern";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class _notes {
                                    private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/textpattern/_notes";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string dwsync_xml = Url("dwsync.xml");
                                }
                            
                                public static readonly string plugin_min_js = Url("plugin.min.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class visualblocks {
                                private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/visualblocks";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class _notes {
                                    private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/visualblocks/_notes";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string dwsync_xml = Url("dwsync.xml");
                                }
                            
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class css {
                                    private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/visualblocks/css";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                    public static class _notes {
                                        private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/visualblocks/css/_notes";
                                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                        public static readonly string dwsync_xml = Url("dwsync.xml");
                                    }
                                
                                    public static readonly string visualblocks_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/visualblocks.min.css") ? Url("visualblocks.min.css") : Url("visualblocks.css");
                                         
                                }
                            
                                public static readonly string plugin_min_js = Url("plugin.min.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class visualchars {
                                private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/visualchars";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class _notes {
                                    private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/visualchars/_notes";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string dwsync_xml = Url("dwsync.xml");
                                }
                            
                                public static readonly string plugin_min_js = Url("plugin.min.js");
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class wordcount {
                                private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/wordcount";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class _notes {
                                    private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/plugins/wordcount/_notes";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string dwsync_xml = Url("dwsync.xml");
                                }
                            
                                public static readonly string plugin_min_js = Url("plugin.min.js");
                            }
                        
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class skins {
                            private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/skins";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class lightgray {
                                private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/skins/lightgray";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class _notes {
                                    private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/skins/lightgray/_notes";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string dwsync_xml = Url("dwsync.xml");
                                }
                            
                                public static readonly string content_inline_min_css = Url("content.inline.min.css");
                                public static readonly string content_min_css = Url("content.min.css");
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class fonts {
                                    private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/skins/lightgray/fonts";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                    public static class _notes {
                                        private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/skins/lightgray/fonts/_notes";
                                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                        public static readonly string dwsync_xml = Url("dwsync.xml");
                                    }
                                
                                    public static readonly string tinymce_small_eot = Url("tinymce-small.eot");
                                    public static readonly string tinymce_small_svg = Url("tinymce-small.svg");
                                    public static readonly string tinymce_small_ttf = Url("tinymce-small.ttf");
                                    public static readonly string tinymce_small_woff = Url("tinymce-small.woff");
                                    public static readonly string tinymce_eot = Url("tinymce.eot");
                                    public static readonly string tinymce_svg = Url("tinymce.svg");
                                    public static readonly string tinymce_ttf = Url("tinymce.ttf");
                                    public static readonly string tinymce_woff = Url("tinymce.woff");
                                }
                            
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class img {
                                    private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/skins/lightgray/img";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                    public static class _notes {
                                        private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/skins/lightgray/img/_notes";
                                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                        public static readonly string dwsync_xml = Url("dwsync.xml");
                                    }
                                
                                    public static readonly string anchor_gif = Url("anchor.gif");
                                    public static readonly string loader_gif = Url("loader.gif");
                                    public static readonly string object_gif = Url("object.gif");
                                    public static readonly string trans_gif = Url("trans.gif");
                                }
                            
                                public static readonly string skin_ie7_min_css = Url("skin.ie7.min.css");
                                public static readonly string skin_min_css = Url("skin.min.css");
                            }
                        
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class themes {
                            private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/themes";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class modern {
                                private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/themes/modern";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class _notes {
                                    private const string URLPATH = "~/Areas/Admin/Content/js/tinymce/themes/modern/_notes";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string dwsync_xml = Url("dwsync.xml");
                                }
                            
                                public static readonly string theme_min_js = Url("theme.min.js");
                            }
                        
                        }
                    
                        public static readonly string tinymce_min_js = Url("tinymce.min.js");
                    }
                
                }
            
            }
        
        }
    }
    
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class Bundles
    {
        public static partial class Scripts 
        {
            public static class Assets
            {
            }
        }
        public static partial class Content 
        {
            public static partial class css 
            {
                public static partial class bootstrap 
                {
                    public static partial class mixins 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                    }
                }
                public static partial class custom 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class fonts 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class img 
                {
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                    public const string anytime_css = "~/Content/css/anytime.css";
                    public const string anytime_min_css = "~/Content/css/anytime.min.css";
                    public const string fullcalendar_css = "~/Content/css/fullcalendar.css";
                    public const string fullcalendar_min_css = "~/Content/css/fullcalendar.min.css";
                    public const string fullcalendar_print_css = "~/Content/css/fullcalendar.print.css";
                    public const string mdd_styles_css = "~/Content/css/mdd_styles.css";
                    public const string prism_css = "~/Content/css/prism.css";
                    public const string socicon_css = "~/Content/css/socicon.css";
                }
            }
            public static partial class fonts 
            {
                public static class Assets
                {
                }
            }
            public static partial class images 
            {
                public static class Assets
                {
                }
            }
            public static partial class js 
            {
                public static partial class ckeditor 
                {
                    public static partial class adapters 
                    {
                        public static class Assets
                        {
                            public const string jquery_js = "~/Content/js/ckeditor/adapters/jquery.js"; 
                        }
                    }
                    public static partial class images 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static partial class lang 
                    {
                        public static class Assets
                        {
                            public const string _languages_js = "~/Content/js/ckeditor/lang/_languages.js"; 
                            public const string af_js = "~/Content/js/ckeditor/lang/af.js"; 
                            public const string ar_js = "~/Content/js/ckeditor/lang/ar.js"; 
                            public const string bg_js = "~/Content/js/ckeditor/lang/bg.js"; 
                            public const string bn_js = "~/Content/js/ckeditor/lang/bn.js"; 
                            public const string bs_js = "~/Content/js/ckeditor/lang/bs.js"; 
                            public const string ca_js = "~/Content/js/ckeditor/lang/ca.js"; 
                            public const string cs_js = "~/Content/js/ckeditor/lang/cs.js"; 
                            public const string cy_js = "~/Content/js/ckeditor/lang/cy.js"; 
                            public const string da_js = "~/Content/js/ckeditor/lang/da.js"; 
                            public const string de_js = "~/Content/js/ckeditor/lang/de.js"; 
                            public const string el_js = "~/Content/js/ckeditor/lang/el.js"; 
                            public const string en_au_js = "~/Content/js/ckeditor/lang/en-au.js"; 
                            public const string en_ca_js = "~/Content/js/ckeditor/lang/en-ca.js"; 
                            public const string en_gb_js = "~/Content/js/ckeditor/lang/en-gb.js"; 
                            public const string en_js = "~/Content/js/ckeditor/lang/en.js"; 
                            public const string eo_js = "~/Content/js/ckeditor/lang/eo.js"; 
                            public const string es_js = "~/Content/js/ckeditor/lang/es.js"; 
                            public const string et_js = "~/Content/js/ckeditor/lang/et.js"; 
                            public const string eu_js = "~/Content/js/ckeditor/lang/eu.js"; 
                            public const string fa_js = "~/Content/js/ckeditor/lang/fa.js"; 
                            public const string fi_js = "~/Content/js/ckeditor/lang/fi.js"; 
                            public const string fo_js = "~/Content/js/ckeditor/lang/fo.js"; 
                            public const string fr_ca_js = "~/Content/js/ckeditor/lang/fr-ca.js"; 
                            public const string fr_js = "~/Content/js/ckeditor/lang/fr.js"; 
                            public const string gl_js = "~/Content/js/ckeditor/lang/gl.js"; 
                            public const string gu_js = "~/Content/js/ckeditor/lang/gu.js"; 
                            public const string he_js = "~/Content/js/ckeditor/lang/he.js"; 
                            public const string hi_js = "~/Content/js/ckeditor/lang/hi.js"; 
                            public const string hr_js = "~/Content/js/ckeditor/lang/hr.js"; 
                            public const string hu_js = "~/Content/js/ckeditor/lang/hu.js"; 
                            public const string is_js = "~/Content/js/ckeditor/lang/is.js"; 
                            public const string it_js = "~/Content/js/ckeditor/lang/it.js"; 
                            public const string ja_js = "~/Content/js/ckeditor/lang/ja.js"; 
                            public const string ka_js = "~/Content/js/ckeditor/lang/ka.js"; 
                            public const string km_js = "~/Content/js/ckeditor/lang/km.js"; 
                            public const string ko_js = "~/Content/js/ckeditor/lang/ko.js"; 
                            public const string lt_js = "~/Content/js/ckeditor/lang/lt.js"; 
                            public const string lv_js = "~/Content/js/ckeditor/lang/lv.js"; 
                            public const string mn_js = "~/Content/js/ckeditor/lang/mn.js"; 
                            public const string ms_js = "~/Content/js/ckeditor/lang/ms.js"; 
                            public const string nb_js = "~/Content/js/ckeditor/lang/nb.js"; 
                            public const string nl_js = "~/Content/js/ckeditor/lang/nl.js"; 
                            public const string no_js = "~/Content/js/ckeditor/lang/no.js"; 
                            public const string pl_js = "~/Content/js/ckeditor/lang/pl.js"; 
                            public const string pt_br_js = "~/Content/js/ckeditor/lang/pt-br.js"; 
                            public const string pt_js = "~/Content/js/ckeditor/lang/pt.js"; 
                            public const string ro_js = "~/Content/js/ckeditor/lang/ro.js"; 
                            public const string ru_js = "~/Content/js/ckeditor/lang/ru.js"; 
                            public const string sk_js = "~/Content/js/ckeditor/lang/sk.js"; 
                            public const string sl_js = "~/Content/js/ckeditor/lang/sl.js"; 
                            public const string sr_latn_js = "~/Content/js/ckeditor/lang/sr-latn.js"; 
                            public const string sr_js = "~/Content/js/ckeditor/lang/sr.js"; 
                            public const string sv_js = "~/Content/js/ckeditor/lang/sv.js"; 
                            public const string th_js = "~/Content/js/ckeditor/lang/th.js"; 
                            public const string tr_js = "~/Content/js/ckeditor/lang/tr.js"; 
                            public const string uk_js = "~/Content/js/ckeditor/lang/uk.js"; 
                            public const string vi_js = "~/Content/js/ckeditor/lang/vi.js"; 
                            public const string zh_cn_js = "~/Content/js/ckeditor/lang/zh-cn.js"; 
                            public const string zh_js = "~/Content/js/ckeditor/lang/zh.js"; 
                        }
                    }
                    public static partial class plugins 
                    {
                        public static partial class a11yhelp 
                        {
                            public static partial class dialogs 
                            {
                                public static class Assets
                                {
                                    public const string a11yhelp_js = "~/Content/js/ckeditor/plugins/a11yhelp/dialogs/a11yhelp.js"; 
                                }
                            }
                            public static partial class lang 
                            {
                                public static class Assets
                                {
                                    public const string en_js = "~/Content/js/ckeditor/plugins/a11yhelp/lang/en.js"; 
                                    public const string he_js = "~/Content/js/ckeditor/plugins/a11yhelp/lang/he.js"; 
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static partial class about 
                        {
                            public static partial class dialogs 
                            {
                                public static class Assets
                                {
                                    public const string about_js = "~/Content/js/ckeditor/plugins/about/dialogs/about.js"; 
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static partial class adobeair 
                        {
                            public static class Assets
                            {
                                public const string plugin_js = "~/Content/js/ckeditor/plugins/adobeair/plugin.js"; 
                            }
                        }
                        public static partial class ajax 
                        {
                            public static class Assets
                            {
                                public const string plugin_js = "~/Content/js/ckeditor/plugins/ajax/plugin.js"; 
                            }
                        }
                        public static partial class autogrow 
                        {
                            public static class Assets
                            {
                                public const string plugin_js = "~/Content/js/ckeditor/plugins/autogrow/plugin.js"; 
                            }
                        }
                        public static partial class bbcode 
                        {
                            public static class Assets
                            {
                                public const string plugin_js = "~/Content/js/ckeditor/plugins/bbcode/plugin.js"; 
                            }
                        }
                        public static partial class clipboard 
                        {
                            public static partial class dialogs 
                            {
                                public static class Assets
                                {
                                    public const string paste_js = "~/Content/js/ckeditor/plugins/clipboard/dialogs/paste.js"; 
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static partial class colordialog 
                        {
                            public static partial class dialogs 
                            {
                                public static class Assets
                                {
                                    public const string colordialog_js = "~/Content/js/ckeditor/plugins/colordialog/dialogs/colordialog.js"; 
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static partial class devtools 
                        {
                            public static partial class lang 
                            {
                                public static class Assets
                                {
                                    public const string en_js = "~/Content/js/ckeditor/plugins/devtools/lang/en.js"; 
                                }
                            }
                            public static class Assets
                            {
                                public const string plugin_js = "~/Content/js/ckeditor/plugins/devtools/plugin.js"; 
                            }
                        }
                        public static partial class dialog 
                        {
                            public static class Assets
                            {
                                public const string dialogDefinition_js = "~/Content/js/ckeditor/plugins/dialog/dialogDefinition.js"; 
                            }
                        }
                        public static partial class div 
                        {
                            public static partial class dialogs 
                            {
                                public static class Assets
                                {
                                    public const string div_js = "~/Content/js/ckeditor/plugins/div/dialogs/div.js"; 
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static partial class docprops 
                        {
                            public static partial class dialogs 
                            {
                                public static class Assets
                                {
                                    public const string docprops_js = "~/Content/js/ckeditor/plugins/docprops/dialogs/docprops.js"; 
                                }
                            }
                            public static class Assets
                            {
                                public const string plugin_js = "~/Content/js/ckeditor/plugins/docprops/plugin.js"; 
                            }
                        }
                        public static partial class find 
                        {
                            public static partial class dialogs 
                            {
                                public static class Assets
                                {
                                    public const string find_js = "~/Content/js/ckeditor/plugins/find/dialogs/find.js"; 
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static partial class flash 
                        {
                            public static partial class dialogs 
                            {
                                public static class Assets
                                {
                                    public const string flash_js = "~/Content/js/ckeditor/plugins/flash/dialogs/flash.js"; 
                                }
                            }
                            public static partial class images 
                            {
                                public static class Assets
                                {
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static partial class forms 
                        {
                            public static partial class dialogs 
                            {
                                public static class Assets
                                {
                                    public const string button_js = "~/Content/js/ckeditor/plugins/forms/dialogs/button.js"; 
                                    public const string checkbox_js = "~/Content/js/ckeditor/plugins/forms/dialogs/checkbox.js"; 
                                    public const string form_js = "~/Content/js/ckeditor/plugins/forms/dialogs/form.js"; 
                                    public const string hiddenfield_js = "~/Content/js/ckeditor/plugins/forms/dialogs/hiddenfield.js"; 
                                    public const string radio_js = "~/Content/js/ckeditor/plugins/forms/dialogs/radio.js"; 
                                    public const string select_js = "~/Content/js/ckeditor/plugins/forms/dialogs/select.js"; 
                                    public const string textarea_js = "~/Content/js/ckeditor/plugins/forms/dialogs/textarea.js"; 
                                    public const string textfield_js = "~/Content/js/ckeditor/plugins/forms/dialogs/textfield.js"; 
                                }
                            }
                            public static partial class images 
                            {
                                public static class Assets
                                {
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static partial class iframe 
                        {
                            public static partial class dialogs 
                            {
                                public static class Assets
                                {
                                    public const string iframe_js = "~/Content/js/ckeditor/plugins/iframe/dialogs/iframe.js"; 
                                }
                            }
                            public static partial class images 
                            {
                                public static class Assets
                                {
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static partial class iframedialog 
                        {
                            public static class Assets
                            {
                                public const string plugin_js = "~/Content/js/ckeditor/plugins/iframedialog/plugin.js"; 
                            }
                        }
                        public static partial class image 
                        {
                            public static partial class dialogs 
                            {
                                public static class Assets
                                {
                                    public const string image_js = "~/Content/js/ckeditor/plugins/image/dialogs/image.js"; 
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static partial class link 
                        {
                            public static partial class dialogs 
                            {
                                public static class Assets
                                {
                                    public const string anchor_js = "~/Content/js/ckeditor/plugins/link/dialogs/anchor.js"; 
                                    public const string link_js = "~/Content/js/ckeditor/plugins/link/dialogs/link.js"; 
                                }
                            }
                            public static partial class images 
                            {
                                public static class Assets
                                {
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static partial class liststyle 
                        {
                            public static partial class dialogs 
                            {
                                public static class Assets
                                {
                                    public const string liststyle_js = "~/Content/js/ckeditor/plugins/liststyle/dialogs/liststyle.js"; 
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static partial class pagebreak 
                        {
                            public static partial class images 
                            {
                                public static class Assets
                                {
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static partial class pastefromword 
                        {
                            public static partial class filter 
                            {
                                public static class Assets
                                {
                                    public const string default_js = "~/Content/js/ckeditor/plugins/pastefromword/filter/default.js"; 
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static partial class pastetext 
                        {
                            public static partial class dialogs 
                            {
                                public static class Assets
                                {
                                    public const string pastetext_js = "~/Content/js/ckeditor/plugins/pastetext/dialogs/pastetext.js"; 
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static partial class placeholder 
                        {
                            public static partial class dialogs 
                            {
                                public static class Assets
                                {
                                    public const string placeholder_js = "~/Content/js/ckeditor/plugins/placeholder/dialogs/placeholder.js"; 
                                }
                            }
                            public static partial class lang 
                            {
                                public static class Assets
                                {
                                    public const string en_js = "~/Content/js/ckeditor/plugins/placeholder/lang/en.js"; 
                                    public const string he_js = "~/Content/js/ckeditor/plugins/placeholder/lang/he.js"; 
                                }
                            }
                            public static class Assets
                            {
                                public const string plugin_js = "~/Content/js/ckeditor/plugins/placeholder/plugin.js"; 
                            }
                        }
                        public static partial class scayt 
                        {
                            public static partial class dialogs 
                            {
                                public static class Assets
                                {
                                    public const string options_js = "~/Content/js/ckeditor/plugins/scayt/dialogs/options.js"; 
                                    public const string toolbar_css = "~/Content/js/ckeditor/plugins/scayt/dialogs/toolbar.css";
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static partial class showblocks 
                        {
                            public static partial class images 
                            {
                                public static class Assets
                                {
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static partial class smiley 
                        {
                            public static partial class dialogs 
                            {
                                public static class Assets
                                {
                                    public const string smiley_js = "~/Content/js/ckeditor/plugins/smiley/dialogs/smiley.js"; 
                                }
                            }
                            public static partial class images 
                            {
                                public static class Assets
                                {
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static partial class specialchar 
                        {
                            public static partial class dialogs 
                            {
                                public static class Assets
                                {
                                    public const string specialchar_js = "~/Content/js/ckeditor/plugins/specialchar/dialogs/specialchar.js"; 
                                }
                            }
                            public static partial class lang 
                            {
                                public static class Assets
                                {
                                    public const string en_js = "~/Content/js/ckeditor/plugins/specialchar/lang/en.js"; 
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static partial class styles 
                        {
                            public static partial class styles_ 
                            {
                                public static class Assets
                                {
                                    public const string default_js = "~/Content/js/ckeditor/plugins/styles/styles/default.js"; 
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static partial class stylesheetparser 
                        {
                            public static class Assets
                            {
                                public const string plugin_js = "~/Content/js/ckeditor/plugins/stylesheetparser/plugin.js"; 
                            }
                        }
                        public static partial class table 
                        {
                            public static partial class dialogs 
                            {
                                public static class Assets
                                {
                                    public const string table_js = "~/Content/js/ckeditor/plugins/table/dialogs/table.js"; 
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static partial class tableresize 
                        {
                            public static class Assets
                            {
                                public const string plugin_js = "~/Content/js/ckeditor/plugins/tableresize/plugin.js"; 
                            }
                        }
                        public static partial class tabletools 
                        {
                            public static partial class dialogs 
                            {
                                public static class Assets
                                {
                                    public const string tableCell_js = "~/Content/js/ckeditor/plugins/tabletools/dialogs/tableCell.js"; 
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static partial class templates 
                        {
                            public static partial class dialogs 
                            {
                                public static class Assets
                                {
                                    public const string templates_js = "~/Content/js/ckeditor/plugins/templates/dialogs/templates.js"; 
                                }
                            }
                            public static partial class templates_ 
                            {
                                public static partial class images 
                                {
                                    public static class Assets
                                    {
                                    }
                                }
                                public static class Assets
                                {
                                    public const string default_js = "~/Content/js/ckeditor/plugins/templates/templates/default.js"; 
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static partial class uicolor 
                        {
                            public static partial class dialogs 
                            {
                                public static class Assets
                                {
                                    public const string uicolor_js = "~/Content/js/ckeditor/plugins/uicolor/dialogs/uicolor.js"; 
                                }
                            }
                            public static partial class lang 
                            {
                                public static class Assets
                                {
                                    public const string en_js = "~/Content/js/ckeditor/plugins/uicolor/lang/en.js"; 
                                    public const string he_js = "~/Content/js/ckeditor/plugins/uicolor/lang/he.js"; 
                                }
                            }
                            public static partial class yui 
                            {
                                public static partial class assets 
                                {
                                    public static class Assets
                                    {
                                        public const string yui_css = "~/Content/js/ckeditor/plugins/uicolor/yui/assets/yui.css";
                                    }
                                }
                                public static class Assets
                                {
                                    public const string yui_js = "~/Content/js/ckeditor/plugins/uicolor/yui/yui.js"; 
                                }
                            }
                            public static class Assets
                            {
                                public const string plugin_js = "~/Content/js/ckeditor/plugins/uicolor/plugin.js"; 
                            }
                        }
                        public static partial class wsc 
                        {
                            public static partial class dialogs 
                            {
                                public static class Assets
                                {
                                    public const string wsc_css = "~/Content/js/ckeditor/plugins/wsc/dialogs/wsc.css";
                                    public const string wsc_js = "~/Content/js/ckeditor/plugins/wsc/dialogs/wsc.js"; 
                                }
                            }
                            public static class Assets
                            {
                            }
                        }
                        public static partial class xml 
                        {
                            public static class Assets
                            {
                                public const string plugin_js = "~/Content/js/ckeditor/plugins/xml/plugin.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class skins 
                    {
                        public static partial class kama 
                        {
                            public static partial class images 
                            {
                                public static class Assets
                                {
                                }
                            }
                            public static class Assets
                            {
                                public const string dialog_css = "~/Content/js/ckeditor/skins/kama/dialog.css";
                                public const string editor_css = "~/Content/js/ckeditor/skins/kama/editor.css";
                                public const string skin_js = "~/Content/js/ckeditor/skins/kama/skin.js"; 
                                public const string templates_css = "~/Content/js/ckeditor/skins/kama/templates.css";
                            }
                        }
                        public static partial class office2003 
                        {
                            public static partial class images 
                            {
                                public static class Assets
                                {
                                }
                            }
                            public static class Assets
                            {
                                public const string dialog_css = "~/Content/js/ckeditor/skins/office2003/dialog.css";
                                public const string editor_css = "~/Content/js/ckeditor/skins/office2003/editor.css";
                                public const string skin_js = "~/Content/js/ckeditor/skins/office2003/skin.js"; 
                                public const string templates_css = "~/Content/js/ckeditor/skins/office2003/templates.css";
                            }
                        }
                        public static partial class v2 
                        {
                            public static partial class images 
                            {
                                public static class Assets
                                {
                                }
                            }
                            public static class Assets
                            {
                                public const string dialog_css = "~/Content/js/ckeditor/skins/v2/dialog.css";
                                public const string editor_css = "~/Content/js/ckeditor/skins/v2/editor.css";
                                public const string skin_js = "~/Content/js/ckeditor/skins/v2/skin.js"; 
                                public const string templates_css = "~/Content/js/ckeditor/skins/v2/templates.css";
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static partial class themes 
                    {
                        public static partial class @default 
                        {
                            public static class Assets
                            {
                                public const string theme_js = "~/Content/js/ckeditor/themes/default/theme.js"; 
                            }
                        }
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                        public const string ckeditor_js = "~/Content/js/ckeditor/ckeditor.js"; 
                        public const string ckeditor_basic_js = "~/Content/js/ckeditor/ckeditor_basic.js"; 
                        public const string ckeditor_basic_source_js = "~/Content/js/ckeditor/ckeditor_basic_source.js"; 
                        public const string ckeditor_source_js = "~/Content/js/ckeditor/ckeditor_source.js"; 
                        public const string config_js = "~/Content/js/ckeditor/config.js"; 
                        public const string contents_css = "~/Content/js/ckeditor/contents.css";
                    }
                }
                public static partial class lib 
                {
                    public static class Assets
                    {
                        public const string MarkdownDeepLib_min_js = "~/Content/js/lib/MarkdownDeepLib.min.js"; 
                    }
                }
                public static class Assets
                {
                    public const string anytime_js = "~/Content/js/anytime.js"; 
                    public const string anytime_min_js = "~/Content/js/anytime.min.js"; 
                    public const string bootstrap_js = "~/Content/js/bootstrap.js"; 
                    public const string bootstrap_min_js = "~/Content/js/bootstrap.min.js"; 
                    public const string date_f_0_5_0_js = "~/Content/js/date.f-0.5.0.js"; 
                    public const string date_f_0_5_0_min_js = "~/Content/js/date.f-0.5.0.min.js"; 
                    public const string fullcalendar_js = "~/Content/js/fullcalendar.js"; 
                    public const string fullcalendar_min_js = "~/Content/js/fullcalendar.min.js"; 
                    public const string jquery_1_11_2_intellisense_js = "~/Content/js/jquery-1.11.2.intellisense.js"; 
                    public const string jquery_1_11_2_js = "~/Content/js/jquery-1.11.2.js"; 
                    public const string jquery_1_11_2_min_js = "~/Content/js/jquery-1.11.2.min.js"; 
                    public const string jquery_migrate_1_2_1_js = "~/Content/js/jquery-migrate-1.2.1.js"; 
                    public const string jquery_migrate_1_2_1_min_js = "~/Content/js/jquery-migrate-1.2.1.min.js"; 
                    public const string jquery_ui_1_11_2_js = "~/Content/js/jquery-ui-1.11.2.js"; 
                    public const string jquery_ui_1_11_2_min_js = "~/Content/js/jquery-ui-1.11.2.min.js"; 
                    public const string jquery_md5_js = "~/Content/js/jquery.md5.js"; 
                    public const string jquery_tmpl_js = "~/Content/js/jquery.tmpl.js"; 
                    public const string jquery_tmpl_min_js = "~/Content/js/jquery.tmpl.min.js"; 
                    public const string jquery_twbsPagination_js = "~/Content/js/jquery.twbsPagination.js"; 
                    public const string jquery_twbsPagination_min_js = "~/Content/js/jquery.twbsPagination.min.js"; 
                    public const string jquery_ui_core_js = "~/Content/js/jquery.ui.core.js"; 
                    public const string jquery_ui_core_min_js = "~/Content/js/jquery.ui.core.min.js"; 
                    public const string jquery_unobtrusive_ajax_js = "~/Content/js/jquery.unobtrusive-ajax.js"; 
                    public const string jquery_unobtrusive_ajax_min_js = "~/Content/js/jquery.unobtrusive-ajax.min.js"; 
                    public const string jquery_validate_js = "~/Content/js/jquery.validate.js"; 
                    public const string jquery_validate_min_js = "~/Content/js/jquery.validate.min.js"; 
                    public const string jquery_validate_unobtrusive_js = "~/Content/js/jquery.validate.unobtrusive.js"; 
                    public const string jquery_validate_unobtrusive_min_js = "~/Content/js/jquery.validate.unobtrusive.min.js"; 
                    public const string moment_with_locales_js = "~/Content/js/moment-with-locales.js"; 
                    public const string moment_with_locales_min_js = "~/Content/js/moment-with-locales.min.js"; 
                    public const string moment_js = "~/Content/js/moment.js"; 
                    public const string moment_min_js = "~/Content/js/moment.min.js"; 
                    public const string raccoon_blog_js = "~/Content/js/raccoon-blog.js"; 
                    public const string RequiredIfValidation_js = "~/Content/js/RequiredIfValidation.js"; 
                    public const string respond_src_js = "~/Content/js/respond.src.js"; 
                    public const string setup_js = "~/Content/js/setup.js"; 
                    public const string showdown_js = "~/Content/js/showdown.js"; 
                    public const string utils_js = "~/Content/js/utils.js"; 
                }
            }
            public static partial class license 
            {
                public static class Assets
                {
                }
            }
            public static partial class themes 
            {
                public static partial class @base 
                {
                    public static partial class images 
                    {
                        public static class Assets
                        {
                        }
                    }
                    public static class Assets
                    {
                        public const string accordion_css = "~/Content/themes/base/accordion.css";
                        public const string all_css = "~/Content/themes/base/all.css";
                        public const string autocomplete_css = "~/Content/themes/base/autocomplete.css";
                        public const string base_css = "~/Content/themes/base/base.css";
                        public const string button_css = "~/Content/themes/base/button.css";
                        public const string core_css = "~/Content/themes/base/core.css";
                        public const string datepicker_css = "~/Content/themes/base/datepicker.css";
                        public const string dialog_css = "~/Content/themes/base/dialog.css";
                        public const string draggable_css = "~/Content/themes/base/draggable.css";
                        public const string menu_css = "~/Content/themes/base/menu.css";
                        public const string progressbar_css = "~/Content/themes/base/progressbar.css";
                        public const string resizable_css = "~/Content/themes/base/resizable.css";
                        public const string selectable_css = "~/Content/themes/base/selectable.css";
                        public const string selectmenu_css = "~/Content/themes/base/selectmenu.css";
                        public const string slider_css = "~/Content/themes/base/slider.css";
                        public const string sortable_css = "~/Content/themes/base/sortable.css";
                        public const string spinner_css = "~/Content/themes/base/spinner.css";
                        public const string tabs_css = "~/Content/themes/base/tabs.css";
                        public const string theme_css = "~/Content/themes/base/theme.css";
                        public const string tooltip_css = "~/Content/themes/base/tooltip.css";
                    }
                }
                public static class Assets
                {
                }
            }
            public static class Assets
            {
            }
        }
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;

    // Calling T4Extension.TimestampString through delegate to allow it to be replaced for unit testing and other purposes
    public static Func<string, string> TimestampString = System.Web.Mvc.T4Extensions.TimestampString;

    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() { 
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
    }
}





#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108


